s
mtcars$gear
l1 <- mtcars$cyl
l2 <- mtcars$gear
interaction(l1, l2)
str(split(mtcars, list(l1, l2)))
str(split(mtcars, list(l1, l2)), drop = TRUE)
spl <- str(split(mtcars, list(l1, l2)), drop = TRUE)
spl <- str(split(mtcars, list(l1, l2)), drop = TRUE)
spl
split(mtcars, list(l1, l2)), drop = TRUE
split(mtcars, list(l1, l2), drop = TRUE)
spl <- str(split(mtcars, list(l1, l2), drop = TRUE))
spl <- str(split(mtcars, list(l1, l2), drop = TRUE))
spl <- split(mtcars, list(l1, l2), drop = TRUE)
spl
sapply(spl, function(x) colMeans(x[, c("mpg", "disp", "hp", "wt", "qsec")]))
log(-1)
mean(x)
traceback
mean(x)
traceback()
lm(y-x)
traceback()
lm(10-x)
traceback()
lm(10-5)
lm(y - x)
traceback()
set.seed(1)
rpois(5,2)
set.seed(1)
rpois(5,2)
set.seed(77)
rpois(5,2)
set.seed(1)
rpois(5,2)
?rnorm
library(datasets)
str(airquality)
summary(airquality)
?rpois
help(distribution)
?download.file()
download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
getwd()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "~/Data Science/Getting and Cleaning Data/quiz1_data.csv")
??download.file
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "~/Data Science/Getting and Cleaning Data/quiz1_data.csv")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "~/Data Science/Getting and Cleaning Data/")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "~/Data Science/03 Getting and Cleaning Data/quiz1_data.csv")
quizData <- read.csv("~/Data Science/03 Getting and Cleaning Data/quiz1_data.csv")
?getnames
?getnames()
?names()
names(quizData)
?colnames
colnames(quizData)
?str
str(quizData)
quizData_1M <- subset(quizData, VAL = '24')
quizData_1M <- subset(quizData, VAL == '24')
?rows
??rows
?row
quizData_1M
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "~/Data Science/03 Getting and Cleaning Data/quiz1_data2.csv")
quizData2 <- read.table("~/Data Science/03 Getting and Cleaning Data/quiz1_data2.csv")
str(quizData2)
quizData2
?read.table
quizData2 <- read.table("~/Data Science/03 Getting and Cleaning Data/quiz1_data2.csv", sep = "\")
quizData2
quizData2 <- read.table("~/Data Science/03 Getting and Cleaning Data/quiz1_data2.csv", header = FALSE, sep = "\")
)
quizData2 <- read.table("~/Data Science/03 Getting and Cleaning Data/quiz1_data2.csv", header = FALSE, sep = \)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "~/Data Science/03 Getting and Cleaning Data/quiz1_data2.xlsx")
quizData2 <- read.table("~/Data Science/03 Getting and Cleaning Data/quiz1_data2.xlsx")
str(quizData2)
install.packages('xlsx')
library(xlsx)
read.columns("~/Data Science/03 Getting and Cleaning Data/quiz1_data2.xlsx", startColumn = 7, endColumn = 15, startRow = 18, endRow = 23)
data <- read.columns("~/Data Science/03 Getting and Cleaning Data/quiz1_data2.xlsx", startColumn = 7, endColumn = 15, startRow = 18, endRow = 23)
?read.columns
?read.xlsx
xlsxData <- read.xlsx("~/Data Science/03 Getting and Cleaning Data/quiz1_data2.xlsx",1, startRow = 18, endRow = 23)
xlsxData
xlsxData <- xlsxData[,7:15]
xlsxData <- read.xlsx("~/Data Science/03 Getting and Cleaning Data/quiz1_data2.xlsx",1, startRow = 18, endRow = 23)
dat <- xlsxData[,7:15]
sum(dat$Zip*dat$Ext,na.rm=T)
?fread
??fread
?fread()
install.packages('data.table')
librarr('data.table')
library('data.table')
?fread
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "~/Data Science/03 Getting and Cleaning Data/quiz1_data4.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "~/Data Science/03 Getting and Cleaning Data/quiz1_data4.csv", method='curl')
DT <- fread("~/Data Science/03 Getting and Cleaning Data/quiz1_data4.csv")
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
mean(DT$pwgtp15,by=DT$SEX)
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
tables()
r.version.string
R.version.string
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, straingsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
select?
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size>100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
seleect(cran, r_arch:country)
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
tbl_df("mydf")
tbl_df(mydf)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
?n
?n_distinct
?n
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
?chain
submit()
cran %>%
select(ip_id, country, package, size) %>%
print
cran
help
submit
submit()
submit()
submit()
submit()
x <- data.frame("var1"=sample(1:5), "var2"=sample(6:10), "var3"=sample(11:15))
x
set.seed(13435)
x <- data.frame("var1"=sample(1:5), "var2"=sample(6:10), "var3"=sample(11:15))
x
rm(x)
set.seed(13435)
x <- data.frame("var1"=sample(1:5), "var2"=sample(6:10), "var3"=sample(11:15))
x
X <- x[sample(1:5),];x$var2[c(1,3)=NA]
X <- x[sample(1:5),];x$var2[c(1,3)]=NA
x
X
x
x
X
X
x
set.seed(13435)
x <- data.frame("var1"=sample(1:5), "var2"=sample(6:10), "var3"=sample(11:15))
x <- x[sample(1:5),];x$var2[c(1,3)]=NA
x
x[(x$var2>8),]
x[which((x$var2>8),]
x[which(x$var2>8),]
x[which((x$var2>8)),]
x[which(x$var2>8),]
x[order(x$var1),]
x[order(x$var1, x$var3),]
x$var4 <- rnorm(5)
x
y <- cbind(x, rnorm(5))
y
y2 <- cbind(rnorm(5),x)
y2
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, into=c("sex", "class"))
submit()
students3
submit()
submit()
?spread
submit()
submit()
submit()
submit()
extract_numeric("class5")
?mutate
submit()
?extract_numeric
submit()
?mutate
submit()
students4
submit()
?unique
submit()
submit()
passed
failed
passed <- mutate(passed, status == "passed")
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status ="failed")
rbind_list(passed, failed)
sat
?contains
?select
?separate
submit()
submit()
submit()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
View(students2)
submit()
students3
submit()
?spread
submit()
extract_numeric("class5")
submit()
student4
students4
submit()
submit()
submit()
submit()
passed
failed
mutate(passed, status = "passed")
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
rbind_list(passed, failed)
sat
submit()
submit()
submit()
sys.getlocale("LC_TIME")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_mo
this_moment
minute(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 13, minutes = 40)
this_moment
?now
now(tzone = "America/New_York")
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
update(depart, hours = 17, minutes = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
?tempfile
setwd("~/Data Science/03 Getting and Cleaning Data/courseProject")
## Check if data directory exists; create if it doesn't
if(!file.exists("~/data")) {
dir.create("~/data")
}
## Download and unzip dataset
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
zipFile <- "UCI-HAR_Dataset.zip"
download.file(fileURL, zipFile, method = "curl")
unzip(zipFile, exdir = "~/data")
run_analysis.R
if(!file.exists("~/data")) {
dir.create("~/data")
}
if(!file.exists("./data")) {
dir.create("./data")
}
unzip(zipFile, exdir = "./data")
subjectTest <- read.table("./data/UCI HAR Dataset/test/subject_test.txt",
header = F, stringsAsFactors = F, fill = T)
xTest <- read.table("./data/UCI HAR Dataset/test/X_test.txt",
header = F, stringsAsFactors = F, fill = T)
yTest <- read.table("./data/UCI HAR Dataset/test/y_test.txt",
header = F, stringsAsFactors = F, fill = T)
subjectTrain <- read.table("./data/UCI HAR Dataset/train/subject_train.txt",
header = F, stringsAsFactors = F, fill = T)
xTrain <- read.table("./data/UCI HAR Dataset/train/X_train.txt",
header = F, stringsAsFactors = F, fill = T)
yTrain <- read.table("./data/UCI HAR Dataset/train/y_train.txt",
header = F, stringsAsFactors = F, fill = T)
allSubject <- rbind(subjectTest, subjectTrain)
allY <- rbind(yTest, yTrain)
allX <- rbind(xTest, xTrain)
allData <- cbind(allSubject, allY, allX)
colnames(allData)[1:2] <- c("Subject", "Activity")
xNames <- read.table("./data/UCI HAR Dataset/features.txt",
header = F, stringsAsFactors = F, fill = T)
xnames
xNames
colnames(mergedData)[3:563] <- xNames[, 2]
colnames(allData)[3:563] <- xNames[, 2]
?grep1
?grepl
selectData <- allData[, grepl("mean()|std()|Activity|Subject",
colnames(mergedData))]
selectData <- allData[, grepl("mean()|std()|Activity|Subject",
colnames(allData))]
selectData <- allData[, grepl("mean()|std()|Activity|Subject",
colnames(allData)) &
!grepl("meanFreq",colnames(allData))]
colnames(selectData)
selectData <- allData[, grepl("mean()|std()|Activity|Subject",
colnames(allData))]
colnames(selectData)
selectData <- allData[, grepl("mean()|std()|Activity|Subject",
colnames(allData)) &
!grepl("meanFreq",colnames(allData))]
?factor
?match
activities <- read.table("./data/UCI HAR Dataset/activity_labels.txt",
header = F, stringsAsFactors = F, fill = T)
s2 <- selectData
head(s2)
s2$Activity <- activities[,2][match(s2$Activity,activities[,1])]
head(s2)
activities
tail(s2)
tail(selectData)
activities
selectData$Activity <- activities[,2][match(selectData$Activity,activities[,1])]
tail(selectData)
library(ddply)
install.packages("ddply")
library(ddply)
library(dplyr)
?summarize
library(plyr)
Data2<-aggregate(. ~subject + activity, selectData, mean)
Data2<-aggregate(. ~Subject + Activity, selectData, mean)
Data2<-Data2[order(Data2$Subject,Data2$Activity),]
Data2
?melt
install.packages("reshape2")
library(reshape2)
?melt
install.packages("ddply")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
library(plyr)
tidyData <- ddply(selectData,
.(Subject, Activity),
.fun=function(x) { colMeans(x[ ,-c(1:2)]) })
tidyData
head(tidyData)
head(tidyData, n=10)
?write.table
write.csv(tidyData, "./data/getCleanData_project.txt", row.names = FALSE)
setwd("~/Data Science/03 Getting and Cleaning Data/getCleanData_courseProject")
load("~/Data Science/03 Getting and Cleaning Data/getCleanData_courseProject/run_analysis.R")
setwd("~/Data Science/03 Getting and Cleaning Data/courseProject")
load("~/Data Science/03 Getting and Cleaning Data/courseProject/run_analysis.R")
